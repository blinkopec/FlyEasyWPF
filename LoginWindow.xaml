<Window x:Class="integrationWPF.LoginWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:integrationWPF"
        mc:Ignorable="d"
        Title="FlyEasy" Height="300" Width="400"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <ResourceDictionary>

            <Style x:Key="Icons" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="20" Name="Border" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.100" To="2,2,2,2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.100" To="1,1,1,1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="PreviewMouseDown">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.100" To="4,4,4,4"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="PreviewMouseUp">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.100" To="0,0,0,0"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2"
                       SnapsToDevicePixels="true"
                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                       StrokeDashArray="1 2"
                       StrokeThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <SolidColorBrush x:Key="Button.Static.Background"
                     Color="#FFDDDDDD" />
            <SolidColorBrush x:Key="Button.Static.Border"
                     Color="#FF707070" />
            <SolidColorBrush x:Key="Button.MouseOver.Background"
                     Color="#FFBEE6FD" />
            <SolidColorBrush x:Key="Button.MouseOver.Border"
                     Color="#FF3C7FB1" />
            <SolidColorBrush x:Key="Button.Pressed.Background"
                     Color="#FFF4F4F4" />
            <SolidColorBrush x:Key="Button.Pressed.Border"
                     Color="#FFF4F4F4" />
            <SolidColorBrush x:Key="Button.Disabled.Background"
                     Color="#FFF4F4F4" />
            <SolidColorBrush x:Key="Button.Disabled.Border"
                     Color="#FFADB2B5" />
            <SolidColorBrush x:Key="Button.Disabled.Foreground"
                     Color="#FF838383" />

            <Style x:Key="DefaultButtonStyle"
           TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                </Trigger>
                                <!--<Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
              </Trigger>-->
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="#FFF4F4F4" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="#FFF4F4F4" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="border" Property="Background" Value="#FFF4F4F4" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="#FFF4F4F4" />
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="28"/>
            <RowDefinition Height="85"/>
            <RowDefinition Height="85"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <Border Height="28" Width="35" HorizontalAlignment="Left"  VerticalAlignment="Top"  Grid.Row="0" >
            <Button x:Name="BackButton" Cursor="Hand" Style="{StaticResource Icons}" Click="BackButton_Click">
                <StackPanel Orientation="Horizontal">
                    <Image>
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Resources/back-icon.png"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=Cart}" Value="True">
                                        <Setter Property="Source" Value="Resources/back-icon.png" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}, AncestorLevel=1}, Path=IsPressed}" Value="True">
                                        <Setter Property="Source" Value="Resources/back-icon.png"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </StackPanel>
            </Button>
        </Border>

        <Ellipse Panel.ZIndex="0" Fill="#0154c5" Margin="18,-45,-40,32" Grid.RowSpan="3"/>
        <Label Grid.Row="1" Content="Войдите в аккаунт" FontSize="24" FontWeight="Bold"
               HorizontalAlignment="Center" VerticalAlignment="Center"/>

        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="30"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="150"/>
            </Grid.ColumnDefinitions>

            <Label Grid.Row="0" Grid.Column="0" Content="Логин:" VerticalAlignment="Center" HorizontalAlignment="Right"/>
            <TextBox x:Name="LoginBox" Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Width="150"/>

            <Label Grid.Row="1" Grid.Column="0" Content="Пароль:" VerticalAlignment="Center" HorizontalAlignment="Right"/>
            <PasswordBox x:Name="PasswordBox" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Width="150"/>
        </Grid>

        <Button x:Name="RegestrationButton" Grid.Row="3" Width="200" Style="{StaticResource DefaultButtonStyle}" Content="Нет аккаунта? Зарегистрируйтесь!" Click="RegestrationButton_Click" Foreground="Gray" Background="Transparent" BorderBrush="Transparent"/>
        <Button x:Name="LoginButton" Grid.Row="4" Width="100" VerticalAlignment="Center" HorizontalAlignment="Center" Content="Вход" Click="LoginButton_Click"/>
    </Grid>
</Window>
